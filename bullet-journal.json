{
  "name": "bullet-journal",
  "displayName": "bullet-journal",
  "exported": 1564924503,
  "pages": [
    {
      "title": "変更履歴",
      "created": 1564924218,
      "updated": 1564924470,
      "lines": [
        "変更履歴",
        " 2019-08-03　公開",
        " 2019-08-04　テンプレートから新規ページを作るときにページ名を入力できるようにした",
        " 2019-08-17　新規ページを作るとき、入力された日付から前後の日付と日付リストを算出していない不具合を直した",
        ""
      ]
    },
    {
      "title": "フューチャーログ",
      "created": 1564844168,
      "updated": 1564924426,
      "lines": [
        "フューチャーログ",
        "code:script.js",
        " const newDate = (yyyy, offset) => {",
        " \tconst dt = yyyy ? new Date(yyyy) : new Date()",
        " \tdt.setFullYear(dt.getFullYear() + offset)",
        " \treturn dt.getFullYear()",
        " }",
        " const listDates = yyyy => {",
        " \tconst result = []",
        " \tconst dt = yyyy ? new Date(yyyy) : new Date()",
        " \tconst y = dt.getFullYear()",
        " \tfor (const index of Array.from(Array(12).keys())) {",
        " \t\tdt.setMonth(index)",
        " \t\tif (dt.getFullYear() !== y) { break }",
        " \t\tresult.push(`[${dt.toISOString().substring(0, 7)}]`)",
        " \t\tresult.push('')",
        " \t}",
        " \treturn result",
        " }",
        " scrapbox.PageMenu().addItem({",
        " \ttitle: 'フューチャーログ',",
        " \timage: null,",
        " \tonClick: (e) => {",
        " \t\tconst thisYear = window.prompt('フューチャーログを作ります: yyyy', newDate('', 0))",
        " \t\tconst prevYear = newDate(thisYear, -1)",
        " \t\tconst nextYear = newDate(thisYear, +1)",
        " \t\tif (!thisYear) { return }",
        " \t\t",
        " \t\tconst title = encodeURIComponent(thisYear)",
        " \t\tconst body = encodeURIComponent([",
        " \t\t\t`[${prevYear}] | [${nextYear}]`,",
        " \t\t\t''",
        " \t\t].concat(listDates(thisYear)).concat([",
        " \t\t\t'',",
        " \t\t\t'#フューチャーログ'",
        " \t\t]).join('\\n'))",
        " \t\t",
        " \t\tconst created = scrapbox.Project.pages.some(p => p.exists && p.title === thisYear)",
        " \t\tif (created) {",
        " \t\t\twindow.open(`/${scrapbox.Project.name}/${title}`)",
        " \t\t} else {",
        " \t\t\twindow.open(`/${scrapbox.Project.name}/${title}?body=${body}`)",
        " \t\t}",
        " \t}",
        " })",
        "",
        "#テンプレート",
        ""
      ]
    },
    {
      "title": "マンスリーログ",
      "created": 1564841983,
      "updated": 1564924419,
      "lines": [
        "マンスリーログ",
        "code:script.js",
        " const newDate = (yyyymm, offset) => {",
        " \tconst dt = yyyymm ? new Date(yyyymm) : new Date()",
        " \tdt.setMonth(dt.getMonth() + offset)",
        " \tconst locale = 'ja-JP'",
        " \tconst options = { year: 'numeric', month: '2-digit', day: '2-digit' }",
        " \treturn dt.toLocaleDateString(locale, options).replace(/\\//g, '-').substring(0, 7)",
        " }",
        " const listDates = yyyymm => {",
        " \tconst result = []",
        " \tconst dt = yyyymm ? new Date(yyyymm) : new Date()",
        " \tconst m = dt.getMonth()",
        " \tfor (const index of Array.from(Array(31).keys())) {",
        " \t\tdt.setDate(index + 1)",
        " \t\tif (dt.getMonth() !== m) { break }",
        " \t\tresult.push(`[${dt.toISOString().substring(0, 10)}]`)",
        " \t}",
        " \treturn result",
        " }",
        " scrapbox.PageMenu().addItem({",
        " \ttitle: 'マンスリーログ',",
        " \timage: null,",
        " \tonClick: (e) => {",
        " \t\tconst thisMonth = window.prompt('マンスリーログを作ります: yyyy-mm', newDate('', 0))",
        " \t\tconst prevMonth = newDate(thisMonth, -1)",
        " \t\tconst nextMonth = newDate(thisMonth, +1)",
        " \t\tif (!thisMonth) { return }",
        " \t\t",
        " \t\tconst title = encodeURIComponent(thisMonth)",
        " \t\tconst body = encodeURIComponent([",
        " \t\t\t`[${prevMonth}] | [${nextMonth}]`,",
        " \t\t\t''",
        " \t\t].concat(listDates(thisMonth)).concat([",
        " \t\t\t'',",
        " \t\t\t'#マンスリーログ'",
        " \t\t]).join('\\n'))",
        " \t\t",
        " \t\tconst created = scrapbox.Project.pages.some(p => p.exists && p.title === thisMonth)",
        " \t\tif (created) {",
        " \t\t\twindow.open(`/${scrapbox.Project.name}/${title}`)",
        " \t\t} else {",
        " \t\t\twindow.open(`/${scrapbox.Project.name}/${title}?body=${body}`)",
        " \t\t}",
        " \t}",
        " })",
        "",
        "#テンプレート",
        ""
      ]
    },
    {
      "title": "デイリーログ",
      "created": 1564837476,
      "updated": 1564924408,
      "lines": [
        "デイリーログ",
        "code:script.js",
        " const newDate = (yyyymmdd, offset) => {",
        " \tconst dt = yyyymmdd ? new Date(yyyymmdd) : new Date()",
        " \tdt.setDate(dt.getDate() + offset)",
        " \tconst locale = 'ja-JP'",
        " \tconst options = { year: 'numeric', month: '2-digit', day: '2-digit' }",
        " \treturn dt.toLocaleDateString(locale, options).replace(/\\//g, '-')",
        " }",
        " scrapbox.PageMenu().addItem({",
        " \ttitle: 'デイリーログ',",
        " \timage: null,",
        " \tonClick: (e) => {",
        " \t\tconst today = window.prompt('デイリーログを作ります: yyyy-mm-dd', newDate('', 0))",
        " \t\tconst yesterday = newDate(today, -1)",
        " \t\tconst tomorrow = newDate(today, +1)",
        " \t\tif (!today) { return }",
        " \t\t",
        " \t\tconst title = encodeURIComponent(today)",
        " \t\tconst body = encodeURIComponent([",
        " \t\t\t`[${yesterday}] | [${tomorrow}]`",
        " \t\t].join('\\n'))",
        " \t\t",
        " \t\tconst created = scrapbox.Project.pages.some(p => p.exists && p.title === today)",
        " \t\tif (created) {",
        " \t\t\twindow.open(`/${scrapbox.Project.name}/${title}`)",
        " \t\t} else {",
        " \t\t\twindow.open(`/${scrapbox.Project.name}/${title}?body=${body}`)",
        " \t\t}",
        " \t}",
        " })",
        "",
        "#テンプレート",
        ""
      ]
    },
    {
      "title": "このページについて",
      "created": 1564844472,
      "updated": 1564879387,
      "lines": [
        "このページについて",
        "",
        "[[概要]]",
        "\t`Scrapbox`で[バレットジャーナル https://bulletjournal.com]を実践するための`UserScript`と`UserCSS`、デイリーログやマンスリーログなどのテンプレートをまとめたプロジェクトです。",
        "\t`Page Data`は、[github.com https://github.com/ohtomi/bullet-journal-on-scrapbox]に置いてあります。",
        "",
        "[[使い方]]",
        "\tこのプロジェクトをそのまま利用して使う場合は、自分のプロジェクトに下記を書いてください。",
        "\t`settings`ページ",
        "\t\tcode:style.css",
        "  　@import \"/api/code/bullet-journal/UserCss/style.css\";",
        "　`<my page>`ページ",
        "　\tcode:script.js",
        "   import '/api/code/bullet-journal/UserScript/scrpt.js'",
        "",
        "[[参考]]",
        "\t[/scrasobox/Bullet Journal をやってみる]",
        " [Scrapboxでバレットジャーナル – R-style https://rashita.net/blog/?p=28145]",
        ""
      ]
    },
    {
      "title": "UserScript",
      "created": 1564836667,
      "updated": 1564841020,
      "lines": [
        "UserScript",
        "// テンプレートから新規ページを作るカスタムメニュー",
        "code:scrpt.js",
        " const base = 'bullet-journal'",
        " fetch(`/api/pages/${base}`).then(res => res.json()).then(project => {",
        " \tfor (const page of project.pages) {",
        " \t\tconst isTemplate = page.descriptions.some(d => d === '#テンプレート')",
        " \t\tif (!isTemplate) { continue }",
        " \t\timport(`/api/code/${base}/${page.title}/script.js`)",
        " \t}",
        " })",
        ""
      ]
    },
    {
      "title": "UserCSS",
      "created": 1564835162,
      "updated": 1564836031,
      "lines": [
        "UserCSS",
        "[/scrasobox/Bullet Journal をやってみる]",
        "code:style.css",
        " /* タグアイコンの共通スタイル (1) */",
        " .line:not(.cursor-line) a[href='./!']:not(.icon) span,",
        " .line:not(.cursor-line) a[href='./%3F']:not(.icon) span,",
        " .line:not(.cursor-line) a[href='./*']:not(.icon) span,",
        " .line:not(.cursor-line) a[href='./_']:not(.icon) span,",
        " .line:not(.cursor-line) a[href='./x']:not(.icon) span,",
        " .line:not(.cursor-line) a[href='./%3E']:not(.icon) span,",
        " .line:not(.cursor-line) a[href='./%3C']:not(.icon) span,",
        " .line:not(.cursor-line) a[href='./-']:not(.icon) span,",
        " .line:not(.cursor-line) a[href='./e']:not(.icon) span {",
        "   display: inline-block; width: 0; text-indent: -9999px }",
        " ",
        " /* タグアイコンの共通スタイル (2) */",
        " .line:not(.cursor-line) a[href='./!']:not(.icon)::after,",
        " .line:not(.cursor-line) a[href='./%3F']:not(.icon)::after,",
        " .line:not(.cursor-line) a[href='./*']:not(.icon)::after,",
        " .line:not(.cursor-line) a[href='./_']:not(.icon)::after,",
        " .line:not(.cursor-line) a[href='./x']:not(.icon)::after,",
        " .line:not(.cursor-line) a[href='./%3E']:not(.icon)::after,",
        " .line:not(.cursor-line) a[href='./%3C']:not(.icon)::after,",
        " .line:not(.cursor-line) a[href='./-']:not(.icon)::after,",
        " .line:not(.cursor-line) a[href='./e']:not(.icon)::after {",
        "   display: inline-block; min-width: 1.15em; padding-left: 1px;",
        "   font: normal 110%/normal FontAwesome; text-align: center }",
        " ",
        " /* ここから各アイコンの設定 */",
        " .line:not(.cursor-line) a[href='./!']:not(.icon)::after { content: '\\f06a'; color: #F6AE2D }",
        " .line:not(.cursor-line) a[href='./%3F']:not(.icon)::after { content: '\\f059'; color: #758E4F }",
        " .line:not(.cursor-line) a[href='./*']:not(.icon)::after { content: '\\f069'; color: #F26419 }",
        " .line:not(.cursor-line) a[href='./_']:not(.icon)::after { content: '\\f096'; color: #08BDBD }",
        " .line:not(.cursor-line) a[href='./x']:not(.icon)::after { content: '\\f046'; color: #2489C5 }",
        " .line:not(.cursor-line) a[href='./%3E']:not(.icon)::after { content: '\\f045'; color: lightgrey }",
        " .line:not(.cursor-line) a[href='./%3C']:not(.icon)::after { content: '\\f274'; color: lightgrey }",
        " .line:not(.cursor-line) a[href='./-']:not(.icon)::after { content: '\\f147'; color: lightgrey }",
        " .line:not(.cursor-line) a[href='./e']:not(.icon)::after { content: '\\f10c'; color: #F26419 }",
        ""
      ]
    }
  ]
}